\encoding utf-8
\set QUIET on
\pset null 'NULL'
\set HISTSIZE 2000
\set PROMPT1 '%[%033[01;37m%]%n@%M %[%033[1;34m%]%/ %#%[%033[0m%] '
\set PROMPT2 '%[%033[1;34m%]%#%[%033[0m%] '
\timing on

\pset pager on
\setenv PAGER less
\setenv LESS '-iMSx4 -FX'
\setenv EDITOR nano

\set _settings 'SELECT name, setting, unit, context FROM pg_settings;'
\set _activity 'SELECT usename, count(*) FROM pg_stat_activity GROUP BY usename;'
\set _locks  'SELECT bl.pid AS blocked_pid, a.usename AS blocked_user, kl.pid AS blocking_pid, ka.usename AS blocking_user, a.query AS blocked_statement FROM pg_catalog.pg_locks bl JOIN pg_catalog.pg_stat_activity a ON bl.pid = a.pid JOIN pg_catalog.pg_locks kl JOIN pg_catalog.pg_stat_activity ka ON kl.pid = ka.pid ON bl.transactionid = kl.transactionid AND bl.pid != kl.pid WHERE NOT bl.granted;'
\set _waits 'SELECT pg_stat_activity.pid, pg_stat_activity.query, pg_stat_activity.waiting, now() - pg_stat_activity.query_start AS \"totaltime\", pg_stat_activity.backend_start FROM pg_stat_activity WHERE pg_stat_activity.query !~ \'%IDLE%\'::text AND pg_stat_activity.waiting = true;'
\set _dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) db_size FROM pg_database ORDER BY db_size;'
\set _tablesize 'SELECT nspname || \'.\' || relname AS \"relation\", pg_size_pretty(pg_relation_size(C.oid)) AS "size" FROM pg_class C LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace) WHERE nspname NOT IN (\'pg_catalog\', \'information_schema\') ORDER BY pg_relation_size(C.oid) DESC LIMIT 40;'
\set _uptime 'SELECT now() - pg_postmaster_start_time() AS uptime;'
\set _explain 'EXPLAIN ANALYZE VERBOSE'
\set _rep_delay 'SELECT now() - pg_last_xact_replay_timestamp() AS replication_delay;'
\set _rep_clients 'SELECT client_addr, state, sent_location, write_location, flush_location, replay_location, sync_priority FROM pg_stat_replication;'
